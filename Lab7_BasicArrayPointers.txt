/**
 * Yutian Li 19105096 Lab7_BasicArrayPointers
 */

#include "ee108.h"

//------------------------------------------------------------
// constants
//------------------------------------------------------------

#define DATA_LEN  6

const int SUPERLOOP_DELAY_MS = 50;

//------------------------------------------------------------
// function declarations/prototypes
//------------------------------------------------------------

void randomizeArray(int array[], int len, int minVal, int maxVal);
void printArray(const int array[],int minL ,int len);


//------------------------------------------------------------
// top level functions
//------------------------------------------------------------

void setup() {
  // set up serial
  Serial.begin(9600);
  Serial.println("\n\nLab7_BasicArrayPointers starting...\n");
  Serial.println("\nClick SW1 to start\n");    
}

void loop() {
  // note: we don't need to remember the element values in this
  // array from one execution of the loop function to the next
  int data[DATA_LEN] = { 0 }; // initialize array to all zeros
  long result;
  int index;


  if (readSwitchEvent(sw1Object) == SW_CLICK) { // was there a click?
  
    randomizeArray(data, DATA_LEN, 0, 99);
  
    Serial.println("  Array has been filled with random values");
    printArray(data,1, 4);

    Serial.println("\nClick SW1 to restart\n");
  }
  
  delay(SUPERLOOP_DELAY_MS);
}

//------------------------------------------------------------
// helper functions
//------------------------------------------------------------

/**
 * fill the array with random values
 *
 * @param array   the array to fill (an input/output parameter)
 * @param len     the lenght of the array
 * @param minVal  the minimum random value to fill with (inclusive)
 * @param maxVal  the maximum random value to fill with (inclusive)
 */
void randomizeArray(int array[], int len, int minVal, int maxVal) {
  int i;
  
  for (i = 0; i < len; i++){
    array[i] = random(minVal, maxVal + 1);}
}

/**
 * pretty-print the contents of an array surrounded by braces
 *
 * @param array   the array to print (read only, so const)
 * @param len     the length of the array
 */
void printArray(const int array[],int minL, int len) {
  int i;
  
  Serial.println("  printArray { ");
  
  for (i = minL; i < len; i++) {
    Serial.print(", ");
    Serial.print(array[i]);
  }
  Serial.println(" }");
}